{
	"$schema": "https://playground.wordpress.net/blueprint-schema.json",
	"preferredVersions": {
		"php": "latest",
		"wp": "latest"
	},
	"steps": [
		{
			"step": "setSiteOptions",
			"options": {
				"blogname": "Interactive Demo",
				"blogdescription": "Testing Performace Buildings interactive demo!"
			}
		},
		{
			"step": "installPlugin",
			"pluginData": {
				"resource": "url",
				"url": "https://raw.githubusercontent.com/vladmirom/interactive-demo/refs/heads/main/zips/interactive-demo.zip"
			}
		},
		{
			"step": "runPHP",
			"code": "<?php\nrequire_once 'wordpress/wp-load.php';\n\n$floor_args = array(\n  'post_type'    => 'floor',\n  'post_status'  => 'publish',\n  'post_title'   => 'Top Floor',\n  'post_name'    => 'top-floor',\n  'post_content' => '<!-- wp:post-featured-image /-->\n<!-- wp:paragraph -->\n<p>The top floor of this contemporary building features a prominent yellow cubic structure at its center surrounded by an organized grid of blue solar panels arranged in four sections. This thoughtful design balances architectural aesthetics with sustainable functionality, using the rooftop space to generate renewable energy while the central cube likely houses mechanical systems or specialized facilities.</p>\n<!-- /wp:paragraph -->\n<!-- wp:valve-blocks/marker {\"focalPointX\":31,\"focalPointY\":60,\"selectedCategories\":[\"infrastructure\"]} -->\n<!-- wp:heading {\"level\":4,\"lock\":{\"move\":true,\"remove\":true}} -->\n<h4 class=\"wp-block-heading\">Elevator</h4>\n<!-- /wp:heading -->\n<!-- wp:paragraph -->\n<p>Elevators take you directly to the rooftop.</p>\n<!-- /wp:paragraph -->\n<!-- wp:buttons -->\n<div class=\"wp-block-buttons\"><!-- wp:button -->\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link wp-element-button\">More details</a></div>\n<!-- /wp:button -->\n<!-- wp:button -->\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link wp-element-button\">Watch video</a></div>\n<!-- /wp:button --></div>\n<!-- /wp:buttons -->\n<!-- /wp:valve-blocks/marker -->',\n);\n\n$floor_id = wp_insert_post($floor_args);\n\n// Set featured image with the corrected raw GitHub URL\n$image_url = 'https://raw.githubusercontent.com/vladmirom/interactive-demo/refs/heads/main/images/floors/7.png';\n\n// Debugging output before attempting to fetch\necho \"Attempting to fetch image from: \" . $image_url . \"\\n\";\n\n// Use WordPress HTTP API instead of file_get_contents\n$response = wp_remote_get($image_url);\nif (!is_wp_error($response) && wp_remote_retrieve_response_code($response) === 200) {\n    $image_data = wp_remote_retrieve_body($response);\n    $upload_dir = wp_upload_dir();\n    $filename = basename($image_url);\n    $file = $upload_dir['path'] . '/' . $filename;\n    \n    // Make sure the upload directory exists\n    if (!file_exists($upload_dir['path'])) {\n        wp_mkdir_p($upload_dir['path']);\n    }\n    \n    if (file_put_contents($file, $image_data)) {\n        echo \"Image saved successfully to: \" . $file . \"\\n\";\n        \n        $wp_filetype = wp_check_filetype($filename, null);\n        $attachment = array(\n            'post_mime_type' => $wp_filetype['type'],\n            'post_title' => sanitize_file_name($filename),\n            'post_content' => '',\n            'post_status' => 'inherit'\n        );\n        $attach_id = wp_insert_attachment($attachment, $file, $floor_id);\n        \n        if ($attach_id) {\n            echo \"Attachment created with ID: \" . $attach_id . \"\\n\";\n            require_once(ABSPATH . 'wp-admin/includes/image.php');\n            $attach_data = wp_generate_attachment_metadata($attach_id, $file);\n            wp_update_attachment_metadata($attach_id, $attach_data);\n            set_post_thumbnail($floor_id, $attach_id);\n            echo \"Featured image set successfully.\\n\";\n        } else {\n            echo \"Failed to create attachment.\\n\";\n        }\n    } else {\n        echo \"Failed to save image to disk.\\n\";\n    }\n} else {\n    echo \"Failed to fetch image. Error: \" . (is_wp_error($response) ? $response->get_error_message() : wp_remote_retrieve_response_code($response)) . \"\\n\";\n}\n\n// Debug information\necho \"Created floor post ID: \" . $floor_id;\necho \"\\nFeatured image attached: \" . (has_post_thumbnail($floor_id) ? 'Yes' : 'No');"
		},
		{
			"step": "runPHP",
			"code": "<?php\nrequire_once 'wordpress/wp-load.php';\n\n$floor_args = array(\n  'post_type'    => 'floor',\n  'post_status'  => 'publish',\n  'post_title'   => 'Sport Floor',\n  'post_name'    => 'sport-floor',\n  'post_content' => '<!-- wp:post-featured-image /-->\n<!-- wp:paragraph -->\n<p>The sport floor features a well-designed layout with distinct functional zones: a central fitness area with cardio machines and weight stations, a studio with blue exercise mats, convenient changing rooms with showers, and a vibrant \"docrunch\" lounge space with colorful seating. Glass partitions separate these areas while maintaining an open, light-filled atmosphere that combines active exercise spaces with comfortable social areas for a complete wellness experience.</p>\n<!-- /wp:paragraph -->\n<!-- wp:valve-blocks/marker {\"focalPointX\":88,\"focalPointY\":49} -->\n<!-- wp:heading {\"level\":4,\"lock\":{\"move\":true,\"remove\":true}} -->\n<h4 class=\"wp-block-heading\">Joga class</h4>\n<!-- /wp:heading -->\n<!-- wp:paragraph -->\n<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n<!-- /wp:paragraph -->\n<!-- wp:buttons -->\n<div class=\"wp-block-buttons\"><!-- wp:button -->\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link wp-element-button\">More details</a></div>\n<!-- /wp:button -->\n<!-- wp:button -->\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link wp-element-button\">Watch video</a></div>\n<!-- /wp:button --></div>\n<!-- /wp:buttons -->\n<!-- /wp:valve-blocks/marker -->\n<!-- wp:valve-blocks/marker {\"focalPointX\":66,\"focalPointY\":63} -->\n<!-- wp:heading {\"level\":4,\"lock\":{\"move\":true,\"remove\":true}} -->\n<h4 class=\"wp-block-heading\">Gym</h4>\n<!-- /wp:heading -->\n<!-- wp:paragraph -->\n<p>Lorem ipsum dolor sit amet.</p>\n<!-- /wp:paragraph -->\n<!-- wp:buttons -->\n<div class=\"wp-block-buttons\"><!-- wp:button -->\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link wp-element-button\">More details</a></div>\n<!-- /wp:button -->\n<!-- wp:button -->\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link wp-element-button\">Watch video</a></div>\n<!-- /wp:button --></div>\n<!-- /wp:buttons -->\n<!-- /wp:valve-blocks/marker -->\n<!-- wp:valve-blocks/marker {\"focalPointX\":48,\"focalPointY\":83} -->\n<!-- wp:heading {\"level\":4,\"lock\":{\"move\":true,\"remove\":true}} -->\n<h4 class=\"wp-block-heading\">Pool</h4>\n<!-- /wp:heading -->\n<!-- wp:paragraph -->\n<p>Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n<!-- /wp:paragraph -->\n<!-- wp:buttons -->\n<div class=\"wp-block-buttons\"><!-- wp:button -->\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link wp-element-button\">More details</a></div>\n<!-- /wp:button -->\n<!-- wp:button -->\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link wp-element-button\">Watch video</a></div>\n<!-- /wp:button --></div>\n<!-- /wp:buttons -->\n<!-- /wp:valve-blocks/marker -->',\n);\n\n$floor_id = wp_insert_post($floor_args);\n\n// Set featured image with the corrected raw GitHub URL\n$image_url = 'https://raw.githubusercontent.com/vladmirom/interactive-demo/refs/heads/main/images/floors/6.png';\n\n// Debugging output before attempting to fetch\necho \"Attempting to fetch image from: \" . $image_url . \"\\n\";\n\n// Use WordPress HTTP API instead of file_get_contents\n$response = wp_remote_get($image_url);\nif (!is_wp_error($response) && wp_remote_retrieve_response_code($response) === 200) {\n    $image_data = wp_remote_retrieve_body($response);\n    $upload_dir = wp_upload_dir();\n    $filename = basename($image_url);\n    $file = $upload_dir['path'] . '/' . $filename;\n    \n    // Make sure the upload directory exists\n    if (!file_exists($upload_dir['path'])) {\n        wp_mkdir_p($upload_dir['path']);\n    }\n    \n    if (file_put_contents($file, $image_data)) {\n        echo \"Image saved successfully to: \" . $file . \"\\n\";\n        \n        $wp_filetype = wp_check_filetype($filename, null);\n        $attachment = array(\n            'post_mime_type' => $wp_filetype['type'],\n            'post_title' => sanitize_file_name($filename),\n            'post_content' => '',\n            'post_status' => 'inherit'\n        );\n        $attach_id = wp_insert_attachment($attachment, $file, $floor_id);\n        \n        if ($attach_id) {\n            echo \"Attachment created with ID: \" . $attach_id . \"\\n\";\n            require_once(ABSPATH . 'wp-admin/includes/image.php');\n            $attach_data = wp_generate_attachment_metadata($attach_id, $file);\n            wp_update_attachment_metadata($attach_id, $attach_data);\n            set_post_thumbnail($floor_id, $attach_id);\n            echo \"Featured image set successfully.\\n\";\n        } else {\n            echo \"Failed to create attachment.\\n\";\n        }\n    } else {\n        echo \"Failed to save image to disk.\\n\";\n    }\n} else {\n    echo \"Failed to fetch image. Error: \" . (is_wp_error($response) ? $response->get_error_message() : wp_remote_retrieve_response_code($response)) . \"\\n\";\n}\n\n// Debug information\necho \"Created floor post ID: \" . $floor_id;\necho \"\\nFeatured image attached: \" . (has_post_thumbnail($floor_id) ? 'Yes' : 'No');"
		},
		{
			"step": "runPHP",
			"code": "<?php\nrequire_once 'wordpress/wp-load.php';\n\n$floor_args = array(\n  'post_type'    => 'floor',\n  'post_status'  => 'publish',\n  'post_title'   => 'Office Floor',\n  'post_name'    => 'office-floor',\n  'post_content' => '<!-- wp:post-featured-image /-->\n<!-- wp:valve-blocks/marker {\"focalPointX\":46,\"focalPointY\":62} -->\n<!-- wp:heading {\"level\":4,\"lock\":{\"move\":true,\"remove\":true}} -->\n<h4 class=\"wp-block-heading\">Interactive screen</h4>\n<!-- /wp:heading -->\n<!-- wp:paragraph -->\n<p>Lets visitors find the office they need faster.</p>\n<!-- /wp:paragraph -->\n<!-- wp:buttons -->\n<div class=\"wp-block-buttons\"><!-- wp:button -->\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link wp-element-button\">More details</a></div>\n<!-- /wp:button -->\n<!-- wp:button -->\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link wp-element-button\">Watch video</a></div>\n<!-- /wp:button --></div>\n<!-- /wp:buttons -->\n<!-- /wp:valve-blocks/marker -->\n<!-- wp:paragraph -->\n<p>The office floor features a minimalist open-concept design with clean white surfaces throughout. Partial dividing walls create distinct work zones with rectangular workstations, while a central digital kiosk with a blue screen serves as the floor\\'s focal point. Elevator access is visible at the back wall, and small cubic structures are strategically placed around the space, creating a functional, contemporary workplace that balances openness with defined team areas.</p>\n<!-- /wp:paragraph -->',\n);\n\n$floor_id = wp_insert_post($floor_args);\n\n// Set featured image with the raw GitHub URL\n$image_url = 'https://raw.githubusercontent.com/vladmirom/interactive-demo/refs/heads/main/images/floors/5.png';\n\n// Debugging output before attempting to fetch\necho \"Attempting to fetch image from: \" . $image_url . \"\\n\";\n\n// Use WordPress HTTP API instead of file_get_contents\n$response = wp_remote_get($image_url);\nif (!is_wp_error($response) && wp_remote_retrieve_response_code($response) === 200) {\n    $image_data = wp_remote_retrieve_body($response);\n    $upload_dir = wp_upload_dir();\n    $filename = basename($image_url);\n    $file = $upload_dir['path'] . '/' . $filename;\n    \n    // Make sure the upload directory exists\n    if (!file_exists($upload_dir['path'])) {\n        wp_mkdir_p($upload_dir['path']);\n    }\n    \n    if (file_put_contents($file, $image_data)) {\n        echo \"Image saved successfully to: \" . $file . \"\\n\";\n        \n        $wp_filetype = wp_check_filetype($filename, null);\n        $attachment = array(\n            'post_mime_type' => $wp_filetype['type'],\n            'post_title' => sanitize_file_name($filename),\n            'post_content' => '',\n            'post_status' => 'inherit'\n        );\n        $attach_id = wp_insert_attachment($attachment, $file, $floor_id);\n        \n        if ($attach_id) {\n            echo \"Attachment created with ID: \" . $attach_id . \"\\n\";\n            require_once(ABSPATH . 'wp-admin/includes/image.php');\n            $attach_data = wp_generate_attachment_metadata($attach_id, $file);\n            wp_update_attachment_metadata($attach_id, $attach_data);\n            set_post_thumbnail($floor_id, $attach_id);\n            echo \"Featured image set successfully.\\n\";\n        } else {\n            echo \"Failed to create attachment.\\n\";\n        }\n    } else {\n        echo \"Failed to save image to disk.\\n\";\n    }\n} else {\n    echo \"Failed to fetch image. Error: \" . (is_wp_error($response) ? $response->get_error_message() : wp_remote_retrieve_response_code($response)) . \"\\n\";\n}\n\n// Debug information\necho \"Created floor post ID: \" . $floor_id;\necho \"\\nFeatured image attached: \" . (has_post_thumbnail($floor_id) ? 'Yes' : 'No');"
		},
		{
			"step": "runPHP",
			"code": "<?php\nrequire_once 'wordpress/wp-load.php';\n\n$floor_args = array(\n  'post_type'    => 'floor',\n  'post_status'  => 'publish',\n  'post_title'   => 'Startup Floor',\n  'post_name'    => 'startup-floor',\n  'post_content' => '<!-- wp:post-featured-image /-->\n<!-- wp:paragraph -->\n<p>The startup floor balances productivity with collaboration through an open layout featuring clustered blue workstations and various meeting spaces. A \"docrunch\" branded café area provides casual gathering spots with wooden tables, while glass partitions create semi-private zones without sacrificing openness. Abundant plants and colorful furniture elements throughout create a vibrant atmosphere designed to support both focused work and creative interaction.</p>\n<!-- /wp:paragraph -->\n<!-- wp:valve-blocks/marker {\"focalPointX\":31,\"focalPointY\":52,\"selectedCategories\":[\"people-circulation\",\"building-automation\"]} -->\n<!-- wp:heading {\"level\":4,\"lock\":{\"move\":true,\"remove\":true}} -->\n<h4 class=\"wp-block-heading\">Open Space</h4>\n<!-- /wp:heading -->\n<!-- wp:paragraph -->\n<p></p>\n<!-- /wp:paragraph -->\n<!-- wp:buttons -->\n<div class=\"wp-block-buttons\"><!-- wp:button -->\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link wp-element-button\">More details</a></div>\n<!-- /wp:button -->\n<!-- wp:button -->\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link wp-element-button\">Watch video</a></div>\n<!-- /wp:button --></div>\n<!-- /wp:buttons -->\n<!-- /wp:valve-blocks/marker -->\n<!-- wp:valve-blocks/marker {\"focalPointX\":88,\"focalPointY\":51} -->\n<!-- wp:heading {\"level\":4,\"lock\":{\"move\":true,\"remove\":true}} -->\n<h4 class=\"wp-block-heading\">First meeting room</h4>\n<!-- /wp:heading -->\n<!-- wp:paragraph -->\n<p>Small meeting room for internal meetings.</p>\n<!-- /wp:paragraph -->\n<!-- wp:buttons -->\n<div class=\"wp-block-buttons\"><!-- wp:button -->\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link wp-element-button\">More details</a></div>\n<!-- /wp:button -->\n<!-- wp:button -->\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link wp-element-button\">Watch video</a></div>\n<!-- /wp:button --></div>\n<!-- /wp:buttons -->\n<!-- /wp:valve-blocks/marker -->\n<!-- wp:valve-blocks/marker {\"focalPointX\":53,\"focalPointY\":85,\"selectedCategories\":[\"people-circulation\"]} -->\n<!-- wp:heading {\"level\":4,\"lock\":{\"move\":true,\"remove\":true}} -->\n<h4 class=\"wp-block-heading\">Second meeting room</h4>\n<!-- /wp:heading -->\n<!-- wp:paragraph -->\n<p>Bigger meeting room for client meetings.</p>\n<!-- /wp:paragraph -->\n<!-- wp:buttons -->\n<div class=\"wp-block-buttons\"><!-- wp:button -->\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link wp-element-button\">More details</a></div>\n<!-- /wp:button -->\n<!-- wp:button -->\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link wp-element-button\">Watch video</a></div>\n<!-- /wp:button --></div>\n<!-- /wp:buttons -->\n<!-- /wp:valve-blocks/marker -->',\n);\n\n$floor_id = wp_insert_post($floor_args);\n\n// Set featured image with the raw GitHub URL\n$image_url = 'https://raw.githubusercontent.com/vladmirom/interactive-demo/refs/heads/main/images/floors/4.png';\n\n// Debugging output before attempting to fetch\necho \"Attempting to fetch image from: \" . $image_url . \"\\n\";\n\n// Use WordPress HTTP API instead of file_get_contents\n$response = wp_remote_get($image_url);\nif (!is_wp_error($response) && wp_remote_retrieve_response_code($response) === 200) {\n    $image_data = wp_remote_retrieve_body($response);\n    $upload_dir = wp_upload_dir();\n    $filename = basename($image_url);\n    $file = $upload_dir['path'] . '/' . $filename;\n    \n    // Make sure the upload directory exists\n    if (!file_exists($upload_dir['path'])) {\n        wp_mkdir_p($upload_dir['path']);\n    }\n    \n    if (file_put_contents($file, $image_data)) {\n        echo \"Image saved successfully to: \" . $file . \"\\n\";\n        \n        $wp_filetype = wp_check_filetype($filename, null);\n        $attachment = array(\n            'post_mime_type' => $wp_filetype['type'],\n            'post_title' => sanitize_file_name($filename),\n            'post_content' => '',\n            'post_status' => 'inherit'\n        );\n        $attach_id = wp_insert_attachment($attachment, $file, $floor_id);\n        \n        if ($attach_id) {\n            echo \"Attachment created with ID: \" . $attach_id . \"\\n\";\n            require_once(ABSPATH . 'wp-admin/includes/image.php');\n            $attach_data = wp_generate_attachment_metadata($attach_id, $file);\n            wp_update_attachment_metadata($attach_id, $attach_data);\n            set_post_thumbnail($floor_id, $attach_id);\n            echo \"Featured image set successfully.\\n\";\n        } else {\n            echo \"Failed to create attachment.\\n\";\n        }\n    } else {\n        echo \"Failed to save image to disk.\\n\";\n    }\n} else {\n    echo \"Failed to fetch image. Error: \" . (is_wp_error($response) ? $response->get_error_message() : wp_remote_retrieve_response_code($response)) . \"\\n\";\n}\n\n// Debug information\necho \"Created floor post ID: \" . $floor_id;\necho \"\\nFeatured image attached: \" . (has_post_thumbnail($floor_id) ? 'Yes' : 'No');"
		},
		{
			"step": "runPHP",
			"code": "<?php\nrequire_once 'wordpress/wp-load.php';\n\n$floor_args = array(\n  'post_type'    => 'floor',\n  'post_status'  => 'publish',\n  'post_title'   => 'IT Company Floor',\n  'post_name'    => 'it-company-floor',\n  'post_content' => '<!-- wp:post-featured-image /-->\n<!-- wp:paragraph -->\n<p>The IT company floor features a dynamic layout with transparent glass offices surrounding an open central workspace. The space includes multiple meeting rooms, a \"docrunch\" branded recreational area with a pool table and casual seating, dedicated workstations with computers, and collaborative spaces. Indoor plants and colorful furniture add vibrancy to the professional environment designed for both productivity and team interaction.</p>\n<!-- /wp:paragraph -->\n<!-- wp:valve-blocks/marker {\"focalPointX\":54,\"focalPointY\":22,\"selectedCategories\":[\"people-circulation\",\"amenities\"]} -->\n<!-- wp:heading {\"level\":4,\"lock\":{\"move\":true,\"remove\":true}} -->\n<h4 class=\"wp-block-heading\">Chill out area</h4>\n<!-- /wp:heading -->\n<!-- wp:paragraph -->\n<p>Work or rest, it\\'s up to you.</p>\n<!-- /wp:paragraph -->\n<!-- wp:buttons -->\n<div class=\"wp-block-buttons\"><!-- wp:button -->\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link wp-element-button\">More details</a></div>\n<!-- /wp:button -->\n<!-- wp:button -->\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link wp-element-button\">Watch video</a></div>\n<!-- /wp:button --></div>\n<!-- /wp:buttons -->\n<!-- /wp:valve-blocks/marker -->\n<!-- wp:valve-blocks/marker {\"focalPointX\":46,\"focalPointY\":76} -->\n<!-- wp:heading {\"level\":4,\"lock\":{\"move\":true,\"remove\":true}} -->\n<h4 class=\"wp-block-heading\">Developers\\' cave</h4>\n<!-- /wp:heading -->\n<!-- wp:paragraph -->\n<p>Developers inhabit here.</p>\n<!-- /wp:paragraph -->\n<!-- wp:buttons -->\n<div class=\"wp-block-buttons\"><!-- wp:button -->\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link wp-element-button\">More details</a></div>\n<!-- /wp:button -->\n<!-- wp:button -->\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link wp-element-button\">Watch video</a></div>\n<!-- /wp:button --></div>\n<!-- /wp:buttons -->\n<!-- /wp:valve-blocks/marker -->\n<!-- wp:valve-blocks/marker {\"focalPointX\":90} -->\n<!-- wp:heading {\"level\":4,\"lock\":{\"move\":true,\"remove\":true}} -->\n<h4 class=\"wp-block-heading\">Designers\\' art house</h4>\n<!-- /wp:heading -->\n<!-- wp:paragraph -->\n<p>Designers inhabit here.</p>\n<!-- /wp:paragraph -->\n<!-- wp:buttons -->\n<div class=\"wp-block-buttons\"><!-- wp:button -->\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link wp-element-button\">More details</a></div>\n<!-- /wp:button -->\n<!-- wp:button -->\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link wp-element-button\">Watch video</a></div>\n<!-- /wp:button --></div>\n<!-- /wp:buttons -->\n<!-- /wp:valve-blocks/marker -->',\n);\n\n$floor_id = wp_insert_post($floor_args);\n\n// Set featured image with the raw GitHub URL\n$image_url = 'https://raw.githubusercontent.com/vladmirom/interactive-demo/refs/heads/main/images/floors/3.png';\n\n// Debugging output before attempting to fetch\necho \"Attempting to fetch image from: \" . $image_url . \"\\n\";\n\n// Use WordPress HTTP API instead of file_get_contents\n$response = wp_remote_get($image_url);\nif (!is_wp_error($response) && wp_remote_retrieve_response_code($response) === 200) {\n    $image_data = wp_remote_retrieve_body($response);\n    $upload_dir = wp_upload_dir();\n    $filename = basename($image_url);\n    $file = $upload_dir['path'] . '/' . $filename;\n    \n    // Make sure the upload directory exists\n    if (!file_exists($upload_dir['path'])) {\n        wp_mkdir_p($upload_dir['path']);\n    }\n    \n    if (file_put_contents($file, $image_data)) {\n        echo \"Image saved successfully to: \" . $file . \"\\n\";\n        \n        $wp_filetype = wp_check_filetype($filename, null);\n        $attachment = array(\n            'post_mime_type' => $wp_filetype['type'],\n            'post_title' => sanitize_file_name($filename),\n            'post_content' => '',\n            'post_status' => 'inherit'\n        );\n        $attach_id = wp_insert_attachment($attachment, $file, $floor_id);\n        \n        if ($attach_id) {\n            echo \"Attachment created with ID: \" . $attach_id . \"\\n\";\n            require_once(ABSPATH . 'wp-admin/includes/image.php');\n            $attach_data = wp_generate_attachment_metadata($attach_id, $file);\n            wp_update_attachment_metadata($attach_id, $attach_data);\n            set_post_thumbnail($floor_id, $attach_id);\n            echo \"Featured image set successfully.\\n\";\n        } else {\n            echo \"Failed to create attachment.\\n\";\n        }\n    } else {\n        echo \"Failed to save image to disk.\\n\";\n    }\n} else {\n    echo \"Failed to fetch image. Error: \" . (is_wp_error($response) ? $response->get_error_message() : wp_remote_retrieve_response_code($response)) . \"\\n\";\n}\n\n// Debug information\necho \"Created floor post ID: \" . $floor_id;\necho \"\\nFeatured image attached: \" . (has_post_thumbnail($floor_id) ? 'Yes' : 'No');"
		},
		{
			"step": "runPHP",
			"code": "<?php\nrequire_once 'wordpress/wp-load.php';\n\n$floor_args = array(\n  'post_type'    => 'floor',\n  'post_status'  => 'publish',\n  'post_title'   => 'Ground Floor',\n  'post_name'    => 'ground-floor',\n  'post_content' => '<!-- wp:post-featured-image /-->\n<!-- wp:paragraph -->\n<p>The ground floor combines indoor-outdoor functionality with a spacious interior featuring communal tables, a service counter, and diverse seating areas complemented by abundant plants. Outside, bicycle parking stations flank both sides of the building, while green spaces include a small fountain area. A food truck and road access complete this welcoming entrance level designed for gathering and transit.</p>\n<!-- /wp:paragraph -->\n<!-- wp:valve-blocks/marker {\"focalPointX\":21,\"focalPointY\":51,\"selectedCategories\":[\"infrastructure\",\"vehicle-circulation\"]} -->\n<!-- wp:heading {\"level\":4,\"lock\":{\"move\":true,\"remove\":true}} -->\n<h4 class=\"wp-block-heading\">Bicycle parking</h4>\n<!-- /wp:heading -->\n<!-- wp:paragraph -->\n<p>Bicycles will be safe here.</p>\n<!-- /wp:paragraph -->\n<!-- wp:buttons -->\n<div class=\"wp-block-buttons\"><!-- wp:button -->\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link wp-element-button\">More details</a></div>\n<!-- /wp:button -->\n<!-- wp:button -->\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link wp-element-button\">Watch video</a></div>\n<!-- /wp:button --></div>\n<!-- /wp:buttons -->\n<!-- /wp:valve-blocks/marker -->\n<!-- wp:valve-blocks/marker {\"focalPointX\":41,\"focalPointY\":30,\"selectedCategories\":[\"amenities\"]} -->\n<!-- wp:heading {\"level\":4,\"lock\":{\"move\":true,\"remove\":true}} -->\n<h4 class=\"wp-block-heading\">Art piece</h4>\n<!-- /wp:heading -->\n<!-- wp:paragraph -->\n<p>Detailed information about selected component.</p>\n<!-- /wp:paragraph -->\n<!-- wp:buttons -->\n<div class=\"wp-block-buttons\"><!-- wp:button -->\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link wp-element-button\">More details</a></div>\n<!-- /wp:button -->\n<!-- wp:button -->\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link wp-element-button\">Watch video</a></div>\n<!-- /wp:button --></div>\n<!-- /wp:buttons -->\n<!-- /wp:valve-blocks/marker -->\n<!-- wp:valve-blocks/marker {\"focalPointX\":70,\"focalPointY\":42,\"selectedCategories\":[\"people-circulation\",\"amenities\"]} -->\n<!-- wp:heading {\"level\":4,\"lock\":{\"move\":true,\"remove\":true}} -->\n<h4 class=\"wp-block-heading\">Lunch bay</h4>\n<!-- /wp:heading -->\n<!-- wp:paragraph -->\n<p>Enjoy fresh food in our restaurant.</p>\n<!-- /wp:paragraph -->\n<!-- wp:buttons -->\n<div class=\"wp-block-buttons\"><!-- wp:button -->\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link wp-element-button\">More details</a></div>\n<!-- /wp:button -->\n<!-- wp:button -->\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link wp-element-button\">Watch video</a></div>\n<!-- /wp:button --></div>\n<!-- /wp:buttons -->\n<!-- /wp:valve-blocks/marker -->',\n);\n\n$floor_id = wp_insert_post($floor_args);\n\n// Set featured image with the raw GitHub URL\n$image_url = 'https://raw.githubusercontent.com/vladmirom/interactive-demo/refs/heads/main/images/floors/2.png';\n\n// Debugging output before attempting to fetch\necho \"Attempting to fetch image from: \" . $image_url . \"\\n\";\n\n// Use WordPress HTTP API instead of file_get_contents\n$response = wp_remote_get($image_url);\nif (!is_wp_error($response) && wp_remote_retrieve_response_code($response) === 200) {\n    $image_data = wp_remote_retrieve_body($response);\n    $upload_dir = wp_upload_dir();\n    $filename = basename($image_url);\n    $file = $upload_dir['path'] . '/' . $filename;\n    \n    // Make sure the upload directory exists\n    if (!file_exists($upload_dir['path'])) {\n        wp_mkdir_p($upload_dir['path']);\n    }\n    \n    if (file_put_contents($file, $image_data)) {\n        echo \"Image saved successfully to: \" . $file . \"\\n\";\n        \n        $wp_filetype = wp_check_filetype($filename, null);\n        $attachment = array(\n            'post_mime_type' => $wp_filetype['type'],\n            'post_title' => sanitize_file_name($filename),\n            'post_content' => '',\n            'post_status' => 'inherit'\n        );\n        $attach_id = wp_insert_attachment($attachment, $file, $floor_id);\n        \n        if ($attach_id) {\n            echo \"Attachment created with ID: \" . $attach_id . \"\\n\";\n            require_once(ABSPATH . 'wp-admin/includes/image.php');\n            $attach_data = wp_generate_attachment_metadata($attach_id, $file);\n            wp_update_attachment_metadata($attach_id, $attach_data);\n            set_post_thumbnail($floor_id, $attach_id);\n            echo \"Featured image set successfully.\\n\";\n        } else {\n            echo \"Failed to create attachment.\\n\";\n        }\n    } else {\n        echo \"Failed to save image to disk.\\n\";\n    }\n} else {\n    echo \"Failed to fetch image. Error: \" . (is_wp_error($response) ? $response->get_error_message() : wp_remote_retrieve_response_code($response)) . \"\\n\";\n}\n\n// Debug information\necho \"Created floor post ID: \" . $floor_id;\necho \"\\nFeatured image attached: \" . (has_post_thumbnail($floor_id) ? 'Yes' : 'No');"
		},
		{
			"step": "runPHP",
			"code": "<?php\nrequire_once 'wordpress/wp-load.php';\n\n$floor_args = array(\n  'post_type'    => 'floor',\n  'post_status'  => 'publish',\n  'post_title'   => 'Parking Floor',\n  'post_name'    => 'parking-floor',\n  'post_content' => '<!-- wp:post-featured-image /-->\n<!-- wp:paragraph -->\n<p>The parking floor features an efficient layout with three distinct vehicle sections surrounding an interior facility area. Multiple rows of cars in various colors occupy the organized parking spaces, while a dedicated green zone includes electric vehicle charging stations and several scooters. The indoor space contains elevator access, service kiosks, and storage lockers for building occupants.</p>\n<!-- /wp:paragraph -->\n<!-- wp:valve-blocks/marker {\"focalPointX\":52,\"focalPointY\":77,\"selectedCategories\":[\"vehicle-circulation\",\"infrastructure\",\"building-automation\",\"amenities\"]} -->\n<!-- wp:heading {\"level\":4,\"lock\":{\"move\":true,\"remove\":true}} -->\n<h4 class=\"wp-block-heading\">Electric cars charging </h4>\n<!-- /wp:heading -->\n<!-- wp:paragraph -->\n<p>Electric cars can be left here and charged while you work at the office.</p>\n<!-- /wp:paragraph -->\n<!-- wp:buttons -->\n<div class=\"wp-block-buttons\"><!-- wp:button -->\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link wp-element-button\">More details</a></div>\n<!-- /wp:button -->\n<!-- wp:button -->\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link wp-element-button\">Watch video</a></div>\n<!-- /wp:button --></div>\n<!-- /wp:buttons -->\n<!-- /wp:valve-blocks/marker -->',\n);\n\n$floor_id = wp_insert_post($floor_args);\n\n// Set featured image with the raw GitHub URL\n$image_url = 'https://raw.githubusercontent.com/vladmirom/interactive-demo/refs/heads/main/images/floors/1.png';\n\n// Debugging output before attempting to fetch\necho \"Attempting to fetch image from: \" . $image_url . \"\\n\";\n\n// Use WordPress HTTP API instead of file_get_contents\n$response = wp_remote_get($image_url);\nif (!is_wp_error($response) && wp_remote_retrieve_response_code($response) === 200) {\n    $image_data = wp_remote_retrieve_body($response);\n    $upload_dir = wp_upload_dir();\n    $filename = basename($image_url);\n    $file = $upload_dir['path'] . '/' . $filename;\n    \n    // Make sure the upload directory exists\n    if (!file_exists($upload_dir['path'])) {\n        wp_mkdir_p($upload_dir['path']);\n    }\n    \n    if (file_put_contents($file, $image_data)) {\n        echo \"Image saved successfully to: \" . $file . \"\\n\";\n        \n        $wp_filetype = wp_check_filetype($filename, null);\n        $attachment = array(\n            'post_mime_type' => $wp_filetype['type'],\n            'post_title' => sanitize_file_name($filename),\n            'post_content' => '',\n            'post_status' => 'inherit'\n        );\n        $attach_id = wp_insert_attachment($attachment, $file, $floor_id);\n        \n        if ($attach_id) {\n            echo \"Attachment created with ID: \" . $attach_id . \"\\n\";\n            require_once(ABSPATH . 'wp-admin/includes/image.php');\n            $attach_data = wp_generate_attachment_metadata($attach_id, $file);\n            wp_update_attachment_metadata($attach_id, $attach_data);\n            set_post_thumbnail($floor_id, $attach_id);\n            echo \"Featured image set successfully.\\n\";\n        } else {\n            echo \"Failed to create attachment.\\n\";\n        }\n    } else {\n        echo \"Failed to save image to disk.\\n\";\n    }\n} else {\n    echo \"Failed to fetch image. Error: \" . (is_wp_error($response) ? $response->get_error_message() : wp_remote_retrieve_response_code($response)) . \"\\n\";\n}\n\n// Debug information\necho \"Created floor post ID: \" . $floor_id;\necho \"\\nFeatured image attached: \" . (has_post_thumbnail($floor_id) ? 'Yes' : 'No');"
		},
		{
			"step": "runPHP",
			"code": "<?php\nrequire_once 'wordpress/wp-load.php';\n\n$page_args = array(\n  'post_type'    => 'page',\n  'post_status'  => 'publish',\n  'post_title'   => 'Interactive demo',\n  'post_name'    => 'interactive-demo',\n  'post_content' => '<!-- wp:group {\"align\":\"full\",\"style\":{\"color\":{\"background\":\"#007b92\"}},\"layout\":{\"type\":\"constrained\"}} -->\n<div class=\"wp-block-group alignfull has-background\" style=\"background-color:#007b92\"><!-- wp:valve-blocks/demo {\"selectedFloors\":[{\"id\":1745765066665,\"floorId\":\"4\",\"floorName\":\"Top Floor\",\"floorWidth\":300,\"positionTop\":-82,\"positionLeft\":0,\"isOpen\":true},{\"id\":1745765068648,\"floorId\":\"6\",\"floorName\":\"Sport Floor\",\"floorWidth\":300,\"positionTop\":0,\"positionLeft\":0,\"isOpen\":true},{\"id\":1745765070932,\"floorId\":\"8\",\"floorName\":\"Office Floor\",\"floorWidth\":300,\"positionTop\":0,\"positionLeft\":0,\"isOpen\":true},{\"id\":1745765073367,\"floorId\":\"10\",\"floorName\":\"Startup Floor\",\"floorWidth\":300,\"positionTop\":0,\"positionLeft\":0,\"isOpen\":true},{\"id\":1745765075466,\"floorId\":\"12\",\"floorName\":\"IT Company Floor\",\"floorWidth\":300,\"positionTop\":0,\"positionLeft\":0,\"isOpen\":true},{\"id\":1745765077517,\"floorId\":\"14\",\"floorName\":\"Ground Floor\",\"floorWidth\":500,\"positionTop\":0,\"positionLeft\":48,\"isOpen\":true},{\"id\":1745765079466,\"floorId\":\"16\",\"floorName\":\"Parking Floor\",\"floorWidth\":300,\"positionTop\":350,\"positionLeft\":0,\"isOpen\":false}]} /--></div>\n<!-- /wp:group -->',\n);\n\n$page_id = wp_insert_post($page_args);\n\n// Set the page as front page\nupdate_option('page_on_front', $page_id);\nupdate_option('show_on_front', 'page');\n\n// Debug information\necho \"Created page ID: \" . $page_id;\necho \"\\nPage on front: \" . get_option('page_on_front');\necho \"\\nShow on front: \" . get_option('show_on_front');"
		}
	],
	"features": {
		"networking": true
	},
	"login": true
}